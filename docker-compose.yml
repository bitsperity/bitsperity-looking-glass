services:
  satbase-api:
    build: .
    network_mode: host
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./libs/satbase_core/config:/app/libs/satbase_core/config:ro
      - ./apps:/app/apps:ro
      - ./libs:/app/libs:ro
    command: ["uvicorn", "apps.satbase_api.main:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]

  looking-glass:
    build: ./apps/looking_glass
    network_mode: host
    environment:
      - VITE_API_BASE=http://127.0.0.1:8080
      - VITE_TESSERACT_BASE=http://127.0.0.1:8081
      - VITE_ARIADNE_BASE=http://127.0.0.1:8082
    working_dir: /app
    volumes:
      - ./apps/looking_glass/src:/app/src:ro

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./data/qdrant:/qdrant/storage
    environment:
      - QDRANT__LOG_LEVEL=INFO
    restart: unless-stopped

  satbase-scheduler:
    build:
      context: .
      dockerfile: apps/satbase_scheduler/Dockerfile
    network_mode: host
    environment:
      - SATBASE_API_URL=http://localhost:8080
      - ENABLE_RELOAD=false
    volumes:
      - ./apps/satbase_scheduler:/app
      - ./libs:/app/libs
      - ./data:/app/data
    depends_on:
      - satbase-api
    restart: unless-stopped

  tesseract-api:
    build: .
    network_mode: host
    env_file:
      - .env
    environment:
      - TESSERACT_DEVICE=cuda  # GPU enabled
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - OMP_NUM_THREADS=2
      - MKL_NUM_THREADS=2
      - TOKENIZERS_PARALLELISM=false
    volumes:
      - ./data:/app/data
      - ./libs:/app/libs:ro
      - ./apps:/app/apps:ro
    command: ["uvicorn", "apps.tesseract_api.main:app", "--host", "0.0.0.0", "--port", "8081", "--reload"]
    depends_on:
      - qdrant
      - satbase-api
    # Compose v2 GPU support using device requests. `deploy` is ignored in non-swarm; use `gpus: all` instead.
    gpus: all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 12G
          cpus: '6'

  neo4j:
    image: neo4j:5.15-community
    ports:
      - "7474:7474"  # HTTP Browser
      - "7687:7687"  # Bolt protocol
    environment:
      - NEO4J_AUTH=neo4j/ariadne2025
      - NEO4J_PLUGINS=["graph-data-science", "apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    volumes:
      - ./data/neo4j:/data
      - ./data/neo4j-logs:/logs
    restart: unless-stopped

  ariadne-api:
    build: .
    network_mode: host
    env_file:
      - .env
    environment:
      - NEO4J_URI=bolt://localhost:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=ariadne2025
      - SATBASE_URL=http://localhost:8080
      - TESSERACT_URL=http://localhost:8081
    volumes:
      - ./data:/app/data
      - ./libs:/app/libs:ro
      - ./apps:/app/apps:ro
    command: ["uvicorn", "apps.ariadne_api.main:app", "--host", "0.0.0.0", "--port", "8082", "--reload"]
    depends_on:
      - neo4j
      - satbase-api
    restart: unless-stopped

  manifold-api:
    build: .
    network_mode: host
    env_file:
      - .env
    environment:
      - QDRANT_URL=http://localhost:6333
      - MANIFOLD_QDRANT_COLLECTION=manifold_thoughts
      - MANIFOLD_EMBED_MODEL=mixedbread-ai/mxbai-embed-large-v1
      - MANIFOLD_EMBED_DEVICE=cuda  # cuda, cpu, or empty for auto-detect
    volumes:
      - ./apps:/app/apps
      - ./libs:/app/libs
      - ./data:/app/data
    command: ["uvicorn", "apps.manifold_api.main:app", "--host", "0.0.0.0", "--port", "8083", "--reload"]
    depends_on:
      - qdrant
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  coalescence-api:
    build:
      context: .
      dockerfile: apps/coalescence_api/Dockerfile
    network_mode: host
    env_file:
      - .env
    environment:
      - COALESCENCE_DB_PATH=/app/data/logs/orchestration.db
    volumes:
      - ./data:/app/data
      - ./coalescence/src/db/schema.sql:/app/coalescence/src/db/schema.sql:ro
    command: ["uvicorn", "apps.coalescence_api.main:app", "--host", "0.0.0.0", "--port", "8084", "--reload"]
    restart: unless-stopped

  orchestrator:
    build: ./coalescence
    network_mode: host
    env_file:
      - .env
    environment:
      - LOG_LEVEL=debug
      - LLM_PROVIDER=openai
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - NODE_ENV=development
      - COALESCENCE_API_URL=http://localhost:8084
      - VITE_COALESCENCE_BASE=http://127.0.0.1:3100
    volumes:
      - ./coalescence/src:/app/src
      - ./coalescence/tsconfig.json:/app/tsconfig.json
      - ./coalescence/logs:/app/logs
      - ./coalescence/config:/app/config
      - ./coalescence/agent-rules:/app/agent-rules
      - ./mcps/satbase:/mcps/satbase:ro
      - ./mcps/tesseract:/mcps/tesseract:ro
      - ./mcps/manifold:/mcps/manifold:ro
      - ./mcps/ariadne:/mcps/ariadne:ro
      - ./mcps/coalescence:/mcps/coalescence:ro
    depends_on:
      - satbase-api
      - tesseract-api
      - manifold-api
      - ariadne-api
      - coalescence-api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "fetch('http://localhost:3100/health').then(r => process.exit(r.status === 200 ? 0 : 1)).catch(() => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s


  # HTTP MCP Servers
  # satbase-mcp-http:
  #   build: ./mcps/satbase
  #   network_mode: host
  #   env_file:
  #     - .env
  #   environment:
  #     - SATBASE_API_URL=http://localhost:8080
  #     - HTTP_PORT=3001
  #   command: ["node", "dist/index-http.js"]
  #   depends_on:
  #     - satbase-api
  #   restart: unless-stopped

  # manifold-mcp-http:
  #   build: ./mcps/manifold
  #   network_mode: host
  #   env_file:
  #     - .env
  #   environment:
  #     - MANIFOLD_API_URL=http://localhost:8083
  #     - HTTP_PORT=3002
  #   command: ["node", "dist/index-http.js"]
  #   depends_on:
  #     - manifold-api
  #   restart: unless-stopped

  # ariadne-mcp-http:
  #   build: ./mcps/ariadne
  #   network_mode: host
  #   env_file:
  #     - .env
  #   environment:
  #     - ARIADNE_API_URL=http://localhost:8082
  #     - HTTP_PORT=3003
  #   command: ["node", "dist/index-http.js"]
  #   depends_on:
  #     - ariadne-api
  #   restart: unless-stopped

  # tesseract-mcp-http:
  #   build: ./mcps/tesseract
  #   network_mode: host
  #   env_file:
  #     - .env
  #   environment:
  #     - TESSERACT_API_URL=http://localhost:8081
  #     - HTTP_PORT=3004
  #   command: ["node", "dist/index-http.js"]
  #   depends_on:
  #     - tesseract-api
  #   restart: unless-stopped
