import { c as create_ssr_component, v as validate_component, d as add_attribute, e as escape } from "../../../../chunks/ssr.js";
import { M as ManifoldNav } from "../../../../chunks/ManifoldNav.js";
import { T as ThoughtPreviewModal } from "../../../../chunks/ThoughtPreviewModal.js";
const ssr = false;
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let nodes = [];
  let edges = [];
  let type = "";
  let status = "";
  let tickers = "";
  let previewId = null;
  let containerEl;
  let searchQuery = "";
  return `<div class="p-6 space-y-4 h-full overflow-auto"><h1 class="text-2xl font-semibold" data-svelte-h="svelte-tfz5wd">Manifold Â· Graph</h1> ${validate_component(ManifoldNav, "ManifoldNav").$$render($$result, {}, {}, {})}  <div class="bg-gradient-to-r from-neutral-900 to-neutral-800 rounded-lg p-4 border border-neutral-700"><div class="flex gap-2"><div class="flex-1"><input class="px-4 py-2 rounded bg-neutral-800 w-full text-sm border border-neutral-700 focus:border-indigo-500 focus:outline-none transition-colors" placeholder="Search thoughts to mask graphâ€¦ (semantic search across all fields)"${add_attribute("value", searchQuery, 0)}></div> <button class="px-4 py-2 rounded bg-indigo-600 hover:bg-indigo-500 text-sm font-medium transition-colors flex items-center gap-2" data-svelte-h="svelte-6p83sr"><svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
        Search</button> ${``}</div> ${``}</div>  <div class="bg-neutral-900 rounded-lg p-4 border border-neutral-800"><div class="grid grid-cols-1 md:grid-cols-4 gap-3"><div><label class="text-xs text-neutral-400 mb-1 block" data-svelte-h="svelte-oldrrg">Type</label> <input class="px-3 py-2 rounded bg-neutral-800 w-full text-sm" placeholder="observation, hypothesisâ€¦"${add_attribute("value", type, 0)}></div> <div><label class="text-xs text-neutral-400 mb-1 block" data-svelte-h="svelte-13cgyam">Status</label> <input class="px-3 py-2 rounded bg-neutral-800 w-full text-sm" placeholder="active, validatedâ€¦"${add_attribute("value", status, 0)}></div> <div><label class="text-xs text-neutral-400 mb-1 block" data-svelte-h="svelte-1v3gqa7">Tickers</label> <input class="px-3 py-2 rounded bg-neutral-800 w-full text-sm" placeholder="NVDA,AMD,TSLA"${add_attribute("value", tickers, 0)}></div> <div class="flex items-end"><button class="px-4 py-2 rounded bg-indigo-600 hover:bg-indigo-500 w-full text-sm font-medium transition-colors" ${""}>${escape("Reload Graph")}</button></div></div></div> ${`${` <div class="flex items-center justify-between text-sm"><div class="text-neutral-400"><span class="font-semibold text-neutral-200">${escape(nodes.length)}</span> nodes Â· 
        <span class="font-semibold text-neutral-200">${escape(edges.length)}</span> edges</div> <div class="flex gap-4 text-xs" data-svelte-h="svelte-15ifb2h"><div class="flex items-center gap-1"><div class="w-3 h-3 rounded-full bg-blue-500"></div> <span class="text-neutral-400">observation</span></div> <div class="flex items-center gap-1"><div class="w-3 h-3 rounded-full bg-amber-500"></div> <span class="text-neutral-400">hypothesis</span></div> <div class="flex items-center gap-1"><div class="w-3 h-3 rounded-full bg-emerald-500"></div> <span class="text-neutral-400">analysis</span></div> <div class="flex items-center gap-1"><div class="w-3 h-3 rounded-full bg-pink-500"></div> <span class="text-neutral-400">decision</span></div> <div class="flex items-center gap-1"><div class="w-3 h-3 rounded-full bg-purple-500"></div> <span class="text-neutral-400">reflection</span></div> <div class="flex items-center gap-1"><div class="w-3 h-3 rounded-full bg-red-500"></div> <span class="text-neutral-400">question</span></div></div></div>  <div class="grid grid-cols-1 md:grid-cols-4 gap-4"> <div class="md:col-span-3"><div class="h-[70vh] bg-neutral-900 rounded-lg border border-neutral-800 overflow-hidden"><div class="w-full h-full"${add_attribute("this", containerEl, 0)}></div></div></div>  <div class="md:col-span-1 space-y-3"> ${``} <div class="bg-neutral-900 rounded-lg p-4 border border-neutral-800"><div class="text-sm font-semibold text-neutral-300 mb-3" data-svelte-h="svelte-dz5mgu">Node Info</div> ${`<div class="text-neutral-500 text-sm text-center py-8" data-svelte-h="svelte-qszx7g"><div class="mb-2">ðŸ‘†</div> <p>Click a node to view details</p> <p class="text-xs mt-1">Double-click for quick preview</p></div>`}</div>  <div class="bg-neutral-900 rounded-lg p-4 border border-neutral-800" data-svelte-h="svelte-6p2x6h"><div class="text-sm font-semibold text-neutral-300 mb-2">Interactions</div> <div class="space-y-1 text-xs text-neutral-400"><div>â€¢ <span class="font-medium">Click node</span>: Select node</div> <div>â€¢ <span class="font-medium">Double-click node</span>: Quick preview</div> <div>â€¢ <span class="font-medium">Hover edge</span>: Show relation details</div> <div>â€¢ <span class="font-medium">Drag</span>: Pan canvas</div> <div>â€¢ <span class="font-medium">Scroll</span>: Zoom in/out</div></div></div>  <div class="bg-neutral-900 rounded-lg p-4 border border-neutral-800" data-svelte-h="svelte-h5rl6y"><div class="text-sm font-semibold text-neutral-300 mb-2">Relations</div> <div class="space-y-1 text-xs"><div class="flex items-center gap-2"><div class="w-8 h-0.5 bg-neutral-500"></div> <span class="text-neutral-400">related</span></div> <div class="flex items-center gap-2"><div class="w-8 h-0.5 bg-green-500"></div> <span class="text-neutral-400">supports</span></div> <div class="flex items-center gap-2"><div class="w-8 h-0.5 bg-red-500"></div> <span class="text-neutral-400">contradicts</span></div> <div class="flex items-center gap-2"><div class="w-8 h-0.5 bg-blue-500"></div> <span class="text-neutral-400">followup</span></div> <div class="flex items-center gap-2"><div class="w-8 h-0.5 bg-purple-500"></div> <span class="text-neutral-400">duplicate</span></div></div> <div class="mt-2 text-[11px] text-neutral-500">Thicker edges = stronger relation</div></div></div></div>`}`}</div> ${validate_component(ThoughtPreviewModal, "ThoughtPreviewModal").$$render(
    $$result,
    {
      thoughtId: previewId,
      onClose: () => {
        previewId = null;
      }
    },
    {},
    {}
  )}`;
});
export {
  Page as default,
  ssr
};
