import { c as create_ssr_component, e as escape, b as each } from "../../../../chunks/ssr.js";
const css = {
  code: ".page-header.svelte-rhfmur.svelte-rhfmur{margin-bottom:2rem}.page-header.svelte-rhfmur h1.svelte-rhfmur{font-size:2rem;font-weight:700;color:var(--color-text);margin-bottom:0.5rem}.page-header.svelte-rhfmur p.svelte-rhfmur{color:var(--color-text-secondary);font-size:0.875rem}.flex.svelte-rhfmur.svelte-rhfmur{display:flex}.items-center.svelte-rhfmur.svelte-rhfmur{align-items:center}.justify-between.svelte-rhfmur.svelte-rhfmur{justify-content:space-between}.refresh-controls.svelte-rhfmur.svelte-rhfmur{display:flex;gap:1rem;align-items:center}.refresh-button.svelte-rhfmur.svelte-rhfmur{padding:0.5rem 1rem;background:linear-gradient(135deg, var(--color-accent), var(--color-primary));border:none;border-radius:var(--radius-md);color:white;font-weight:500;cursor:pointer;transition:all var(--duration-200) var(--easing);font-size:0.875rem}.refresh-button.svelte-rhfmur.svelte-rhfmur:hover{box-shadow:0 0 12px rgba(34, 197, 211, 0.3);transform:translateY(-1px)}.cache-status.svelte-rhfmur.svelte-rhfmur{display:flex;flex-direction:column;gap:0.25rem;font-size:0.75rem}.status-text.svelte-rhfmur.svelte-rhfmur{color:var(--color-text-secondary)}.cache-age.svelte-rhfmur.svelte-rhfmur{color:var(--color-accent);font-weight:500}.error-box.svelte-rhfmur.svelte-rhfmur{padding:1.5rem;background:rgba(239, 68, 68, 0.1);border:1px solid var(--color-error);border-radius:var(--radius-lg);color:var(--color-error);text-align:center}.skeleton-grid.svelte-rhfmur.svelte-rhfmur{display:grid;grid-template-columns:repeat(auto-fit, minmax(250px, 1fr));gap:1.5rem}.skeleton-card.svelte-rhfmur.svelte-rhfmur{height:150px;background:linear-gradient(90deg, var(--color-bg-card), var(--color-border));border-radius:var(--radius-lg);animation:svelte-rhfmur-pulse 2s var(--easing) infinite}.topics-skeleton.svelte-rhfmur.svelte-rhfmur{display:flex;flex-direction:column;gap:0.75rem}.skeleton-item.svelte-rhfmur.svelte-rhfmur{height:40px;background:linear-gradient(90deg, var(--color-bg-card), var(--color-border));border-radius:var(--radius-md);animation:svelte-rhfmur-pulse 2s var(--easing) infinite}@keyframes svelte-rhfmur-pulse{0%,100%{opacity:0.5}50%{opacity:1}}.kpi-section.svelte-rhfmur.svelte-rhfmur,.section-card.svelte-rhfmur.svelte-rhfmur{margin-bottom:2rem}h2.svelte-rhfmur.svelte-rhfmur{font-size:1.25rem;font-weight:600;color:var(--color-text);margin-bottom:1rem}.kpi-grid.svelte-rhfmur.svelte-rhfmur{display:grid;grid-template-columns:repeat(auto-fit, minmax(280px, 1fr));gap:1.5rem}.kpi-card.svelte-rhfmur.svelte-rhfmur{display:flex;gap:1rem;padding:1.5rem;background:var(--color-bg-card);border:1px solid rgba(71, 85, 105, 0.3);border-radius:var(--radius-lg);transition:all var(--duration-300) var(--easing);backdrop-filter:blur(10px)}.kpi-card.svelte-rhfmur.svelte-rhfmur:hover{border-color:rgba(34, 197, 211, 0.5);background:rgba(51, 65, 85, 0.7);box-shadow:0 0 20px rgba(34, 197, 211, 0.1)}.kpi-icon.svelte-rhfmur.svelte-rhfmur{font-size:2rem;display:flex;align-items:center;justify-content:center;flex-shrink:0}.kpi-content.svelte-rhfmur.svelte-rhfmur{flex:1}.kpi-label.svelte-rhfmur.svelte-rhfmur{font-size:0.75rem;color:var(--color-text-tertiary);text-transform:uppercase;letter-spacing:0.05em;margin-bottom:0.5rem}.kpi-value.svelte-rhfmur.svelte-rhfmur{font-size:1.875rem;font-weight:700;background:linear-gradient(135deg, var(--color-accent), var(--color-primary));-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text;margin:0}.kpi-subtitle.svelte-rhfmur.svelte-rhfmur{font-size:0.75rem;color:var(--color-text-tertiary);margin:0.25rem 0 0 0}.section-card.svelte-rhfmur.svelte-rhfmur{padding:2rem;background:var(--color-bg-card);border:1px solid rgba(71, 85, 105, 0.3);border-radius:var(--radius-lg);backdrop-filter:blur(10px)}.topics-list.svelte-rhfmur.svelte-rhfmur{display:flex;flex-direction:column;gap:0.75rem;margin-bottom:1rem}.topic-item.svelte-rhfmur.svelte-rhfmur{display:flex;justify-content:space-between;padding:0.75rem;background:rgba(16, 185, 129, 0.05);border-radius:var(--radius-md);border-left:3px solid var(--color-primary)}.topic-name.svelte-rhfmur.svelte-rhfmur{color:var(--color-text);font-weight:500}.topic-count.svelte-rhfmur.svelte-rhfmur{color:var(--color-accent);font-weight:600}.no-data.svelte-rhfmur.svelte-rhfmur{color:var(--color-text-secondary);font-size:0.875rem;text-align:center;padding:2rem}.link-button.svelte-rhfmur.svelte-rhfmur{display:inline-block;color:var(--color-accent);text-decoration:none;font-size:0.875rem;font-weight:500;transition:color var(--duration-200) var(--easing)}.link-button.svelte-rhfmur.svelte-rhfmur:hover{color:var(--color-primary)}.health-grid.svelte-rhfmur.svelte-rhfmur{display:flex;flex-direction:column;gap:1.5rem}.health-item.svelte-rhfmur.svelte-rhfmur{display:flex;flex-direction:column;gap:0.75rem}.health-label.svelte-rhfmur.svelte-rhfmur{font-size:0.875rem;color:var(--color-text-secondary);font-weight:500}.health-bar.svelte-rhfmur.svelte-rhfmur{width:100%;height:8px;background:rgba(71, 85, 105, 0.3);border-radius:var(--radius-xl);overflow:hidden}.health-fill.svelte-rhfmur.svelte-rhfmur{height:100%;background:linear-gradient(90deg, var(--color-accent), var(--color-primary));transition:width var(--duration-500) var(--easing)}.health-value.svelte-rhfmur.svelte-rhfmur{font-size:0.875rem;font-weight:600;color:var(--color-accent)}@media(max-width: 768px){.page-header.svelte-rhfmur h1.svelte-rhfmur{font-size:1.5rem}.kpi-grid.svelte-rhfmur.svelte-rhfmur{grid-template-columns:repeat(auto-fit, minmax(200px, 1fr));gap:1rem}.section-card.svelte-rhfmur.svelte-rhfmur{padding:1.5rem}.refresh-controls.svelte-rhfmur.svelte-rhfmur{flex-direction:column;gap:0.5rem;align-items:flex-end}}.year-selector.svelte-rhfmur.svelte-rhfmur{display:flex;align-items:center;gap:1rem;background:var(--color-bg-card);padding:0.5rem 1rem;border-radius:var(--radius-md);border:1px solid rgba(71, 85, 105, 0.3)}.year-selector.svelte-rhfmur button.svelte-rhfmur{background:transparent;border:none;color:var(--color-text-secondary);cursor:pointer;font-size:1.1rem;transition:color 200ms ease}.year-selector.svelte-rhfmur button.svelte-rhfmur:hover{color:var(--color-accent)}.year-display.svelte-rhfmur.svelte-rhfmur{font-weight:600;color:var(--color-text);min-width:60px;text-align:center}.heatmap-skeleton.svelte-rhfmur.svelte-rhfmur{display:flex;flex-direction:column;gap:0.5rem}.skeleton-bar.svelte-rhfmur.svelte-rhfmur{height:30px;background:linear-gradient(90deg, var(--color-bg-card), var(--color-border));border-radius:var(--radius-md);animation:svelte-rhfmur-pulse 2s var(--easing) infinite}.heatmap-wrapper.svelte-rhfmur.svelte-rhfmur{overflow-x:auto;border:1px solid rgba(71, 85, 105, 0.2);border-radius:var(--radius-md);padding:1rem;background:var(--color-bg-card)}.heatmap-table.svelte-rhfmur.svelte-rhfmur{width:100%;border-collapse:collapse;font-size:0.875rem}.heatmap-table.svelte-rhfmur thead.svelte-rhfmur{background:rgba(71, 85, 105, 0.3);border-bottom:2px solid rgba(71, 85, 105, 0.4)}.header-row.svelte-rhfmur th.svelte-rhfmur{padding:0.75rem 0.5rem;text-align:center;font-weight:600;color:var(--color-text-secondary);border-right:1px solid rgba(71, 85, 105, 0.2)}.topic-header.svelte-rhfmur.svelte-rhfmur{text-align:left;width:100px}.month-header.svelte-rhfmur.svelte-rhfmur{width:50px;font-size:0.75rem}.data-row.svelte-rhfmur.svelte-rhfmur{border-bottom:1px solid rgba(71, 85, 105, 0.1);transition:background-color 150ms ease}.data-row.svelte-rhfmur.svelte-rhfmur:hover{background:rgba(71, 85, 105, 0.15)}.topic-cell.svelte-rhfmur.svelte-rhfmur{padding:0.75rem 1rem;font-weight:600;color:var(--color-text);border-right:1px solid rgba(71, 85, 105, 0.2);width:100px;text-align:left}.heatmap-cell.svelte-rhfmur.svelte-rhfmur{padding:0.5rem;text-align:center;border-right:1px solid rgba(71, 85, 105, 0.1);background:linear-gradient(\n			135deg,\n			hsla(270, 100%, 70%, calc(var(--intensity) * 0.3)),\n			hsla(200, 100%, 60%, calc(var(--intensity) * 0.5))\n		);transition:all 150ms ease;cursor:pointer}.heatmap-cell.svelte-rhfmur.svelte-rhfmur:hover{transform:scale(1.05);box-shadow:inset 0 0 8px rgba(0, 0, 0, 0.3)}.cell-value.svelte-rhfmur.svelte-rhfmur{font-size:0.75rem;font-weight:600;color:var(--color-text-secondary);display:block}.system-status-section.svelte-rhfmur.svelte-rhfmur{margin-bottom:2rem}.status-grid.svelte-rhfmur.svelte-rhfmur{display:grid;grid-template-columns:repeat(auto-fit, minmax(280px, 1fr));gap:1.5rem}.status-card.svelte-rhfmur.svelte-rhfmur{display:flex;flex-direction:column;gap:1rem;padding:1.5rem;background:var(--color-bg-card);border:1px solid rgba(71, 85, 105, 0.3);border-radius:var(--radius-lg);backdrop-filter:blur(10px);transition:all var(--duration-300) var(--easing)}.status-card.svelte-rhfmur.svelte-rhfmur:hover{border-color:rgba(34, 197, 211, 0.5);background:rgba(51, 65, 85, 0.7);box-shadow:0 0 20px rgba(34, 197, 211, 0.1)}.status-header.svelte-rhfmur.svelte-rhfmur{display:flex;justify-content:space-between;align-items:center;padding-bottom:0.75rem;border-bottom:1px solid rgba(71, 85, 105, 0.2)}.status-badge.svelte-rhfmur.svelte-rhfmur{font-size:1.25rem;font-weight:700;padding:0.5rem 1rem;border-radius:var(--radius-md);color:white;flex-shrink:0}.badge-healthy.svelte-rhfmur.svelte-rhfmur{background:linear-gradient(135deg, var(--color-success), var(--color-primary))}.badge-degraded.svelte-rhfmur.svelte-rhfmur{background:linear-gradient(135deg, var(--color-warning), var(--color-primary))}.badge-stale.svelte-rhfmur.svelte-rhfmur{background:linear-gradient(135deg, var(--color-info), var(--color-primary))}.status-content.svelte-rhfmur.svelte-rhfmur{display:flex;flex-direction:column;gap:0.75rem}.status-item.svelte-rhfmur.svelte-rhfmur{display:flex;justify-content:space-between;font-size:0.875rem;color:var(--color-text-secondary)}.status-label.svelte-rhfmur.svelte-rhfmur{font-weight:500}.status-value.svelte-rhfmur.svelte-rhfmur{font-weight:600;color:var(--color-accent)}.quality-card.svelte-rhfmur.svelte-rhfmur{padding:1.5rem;background:var(--color-bg-card);border:1px solid rgba(71, 85, 105, 0.3);border-radius:var(--radius-lg);backdrop-filter:blur(10px)}.quality-card.svelte-rhfmur h3.svelte-rhfmur{font-size:1rem;font-weight:600;color:var(--color-text);margin-bottom:1rem;border-bottom:1px solid rgba(71, 85, 105, 0.2);padding-bottom:0.75rem}.quality-grid.svelte-rhfmur.svelte-rhfmur{display:grid;grid-template-columns:repeat(auto-fit, minmax(150px, 1fr));gap:1rem}.quality-item.svelte-rhfmur.svelte-rhfmur{display:flex;flex-direction:column;gap:0.5rem}.quality-label.svelte-rhfmur.svelte-rhfmur{font-size:0.75rem;color:var(--color-text-tertiary);text-transform:uppercase;letter-spacing:0.05em}.quality-value.svelte-rhfmur.svelte-rhfmur{font-size:1.25rem;font-weight:700;background:linear-gradient(135deg, var(--color-accent), var(--color-primary));-webkit-background-clip:text;-webkit-text-fill-color:transparent;background-clip:text}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\nimport * as satbaseApi from \\"$lib/api/satbase\\";\\nimport { getCachedCoverage, invalidateCache, getCacheRefreshTimeRemaining } from \\"$lib/stores/satbase-cache\\";\\nlet coverage = null;\\nlet topicsSummary = null;\\nlet heatmapData = null;\\nlet healthStatus = null;\\nlet metricsData = null;\\nlet analyticsData = null;\\nlet jobStats = null;\\nlet loading = true;\\nlet topicsLoading = false;\\nlet heatmapLoading = false;\\nlet healthLoading = false;\\nlet metricsLoading = false;\\nlet error = \\"\\";\\nlet lastUpdated = /* @__PURE__ */ new Date();\\nlet cacheTimeRemaining = 0;\\nlet autoRefreshInterval;\\nlet selectedYear = (/* @__PURE__ */ new Date()).getFullYear();\\nonMount(async () => {\\n  try {\\n    coverage = await getCachedCoverage();\\n    loading = false;\\n    lastUpdated = /* @__PURE__ */ new Date();\\n    healthLoading = true;\\n    metricsLoading = true;\\n    topicsLoading = true;\\n    heatmapLoading = true;\\n    healthStatus = await satbaseApi.getNewsHealth();\\n    healthLoading = false;\\n    metricsData = await satbaseApi.getNewsMetrics();\\n    metricsLoading = false;\\n    analyticsData = await satbaseApi.getNewsAnalytics({ days: 7 });\\n    jobStats = await satbaseApi.getJobStats();\\n    topicsSummary = await satbaseApi.getTopicsSummary({\\n      limit: 5,\\n      days: 365\\n    });\\n    const fromDate = \`\${selectedYear}-01-01\`;\\n    const toDate = \`\${selectedYear}-12-31\`;\\n    const topicsForYear = await satbaseApi.getTopicsAll(fromDate, toDate);\\n    const allTopics = topicsForYear?.topics?.map((t) => t.name).join(\\",\\") || \\"\\";\\n    if (allTopics) {\\n      const response = await satbaseApi.getTopicsCoverage(\\n        allTopics,\\n        fromDate,\\n        toDate,\\n        \\"month\\",\\n        \\"matrix\\"\\n      );\\n      if (response?.matrix && response?.topics && response?.periods) {\\n        const transformed = {};\\n        response.topics.forEach((topic) => {\\n          transformed[topic] = {};\\n        });\\n        response.matrix.forEach((row, rowIdx) => {\\n          const period = response.periods[rowIdx];\\n          const monthIndex = parseInt(period.split(\\"-\\")[1]) - 1;\\n          row.forEach((count, topicIdx) => {\\n            const topic = response.topics[topicIdx];\\n            transformed[topic][monthIndex] = count;\\n          });\\n        });\\n        heatmapData = transformed;\\n      } else {\\n        heatmapData = {};\\n      }\\n    } else {\\n      heatmapData = {};\\n    }\\n  } catch (err) {\\n    error = \`Failed to load overview: \${err}\`;\\n  } finally {\\n    topicsLoading = false;\\n    heatmapLoading = false;\\n  }\\n  autoRefreshInterval = setInterval(() => {\\n    cacheTimeRemaining = getCacheRefreshTimeRemaining();\\n  }, 1e3);\\n  return () => {\\n    if (autoRefreshInterval) clearInterval(autoRefreshInterval);\\n  };\\n});\\nasync function manualRefresh() {\\n  try {\\n    coverage = await getCachedCoverage(true);\\n    lastUpdated = /* @__PURE__ */ new Date();\\n    cacheTimeRemaining = 300;\\n  } catch (err) {\\n    error = \`Refresh failed: \${err}\`;\\n  }\\n}\\nfunction formatCount(n) {\\n  if (n >= 1e6) return (n / 1e6).toFixed(1) + \\"M\\";\\n  if (n >= 1e3) return (n / 1e3).toFixed(1) + \\"K\\";\\n  return n.toString();\\n}\\n$: qualityPercentage = coverage?.news ? Math.round(coverage.news.articles_with_bodies / coverage.news.total_articles * 100) : 0;\\n$: formattedTime = lastUpdated.toLocaleTimeString();\\n$: if (selectedYear && topicsSummary?.topics) {\\n  (async () => {\\n    try {\\n      heatmapLoading = true;\\n      const allTopics = topicsSummary.topics.map((t) => t.name).join(\\",\\");\\n      const fromDate = \`\${selectedYear}-01-01\`;\\n      const toDate = \`\${selectedYear}-12-31\`;\\n      const response = await satbaseApi.getTopicsCoverage(\\n        allTopics,\\n        fromDate,\\n        toDate,\\n        \\"month\\",\\n        \\"matrix\\"\\n      );\\n      if (response?.matrix && response?.topics && response?.periods) {\\n        const transformed = {};\\n        response.topics.forEach((topic) => {\\n          transformed[topic] = {};\\n        });\\n        response.matrix.forEach((row, rowIdx) => {\\n          const period = response.periods[rowIdx];\\n          const monthIndex = parseInt(period.split(\\"-\\")[1]) - 1;\\n          row.forEach((count, topicIdx) => {\\n            const topic = response.topics[topicIdx];\\n            transformed[topic][monthIndex] = count;\\n          });\\n        });\\n        heatmapData = transformed;\\n      } else {\\n        heatmapData = {};\\n      }\\n    } catch (err) {\\n      error = \`Failed to load heatmap: \${err}\`;\\n    } finally {\\n      heatmapLoading = false;\\n    }\\n  })();\\n}\\n<\/script>\\n\\n<div class=\\"page-header\\">\\n\\t<div class=\\"flex items-center justify-between\\">\\n\\t\\t<div>\\n\\t\\t\\t<h1>📊 Overview</h1>\\n\\t\\t\\t<p>Satbase data health and coverage at a glance</p>\\n\\t\\t</div>\\n\\t\\t<div class=\\"refresh-controls\\">\\n\\t\\t\\t<button on:click={manualRefresh} class=\\"refresh-button\\" title=\\"Force refresh (bypasses cache)\\">\\n\\t\\t\\t\\t🔄 Refresh\\n\\t\\t\\t</button>\\n\\t\\t\\t<div class=\\"cache-status\\">\\n\\t\\t\\t\\t<span class=\\"status-text\\">Updated {formattedTime}</span>\\n\\t\\t\\t\\t{#if cacheTimeRemaining > 0}\\n\\t\\t\\t\\t\\t<span class=\\"cache-age\\">Fresh for {cacheTimeRemaining}s</span>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n{#if loading}\\n\\t<div class=\\"skeleton-grid\\">\\n\\t\\t{#each Array(6) as _}\\n\\t\\t\\t<div class=\\"skeleton-card\\" />\\n\\t\\t{/each}\\n\\t</div>\\n{:else if error}\\n\\t<div class=\\"error-box\\">\\n\\t\\t<p>{error}</p>\\n\\t</div>\\n{:else}\\n\\t<!-- KPI Deck -->\\n\\t<section class=\\"kpi-section\\">\\n\\t\\t<h2>Key Metrics</h2>\\n\\t\\t<div class=\\"kpi-grid\\">\\n\\t\\t\\t<!-- Total Articles -->\\n\\t\\t\\t<div class=\\"kpi-card\\">\\n\\t\\t\\t\\t<div class=\\"kpi-icon\\">📰</div>\\n\\t\\t\\t\\t<div class=\\"kpi-content\\">\\n\\t\\t\\t\\t\\t<p class=\\"kpi-label\\">Total Articles</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-value\\">{formatCount(coverage?.news?.total_articles || 0)}</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-subtitle\\">across all sources</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Bodies Fetched -->\\n\\t\\t\\t<div class=\\"kpi-card\\">\\n\\t\\t\\t\\t<div class=\\"kpi-icon\\">📥</div>\\n\\t\\t\\t\\t<div class=\\"kpi-content\\">\\n\\t\\t\\t\\t\\t<p class=\\"kpi-label\\">Content Fetched</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-value\\">{qualityPercentage}%</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-subtitle\\">{formatCount(coverage?.news?.articles_with_bodies || 0)} articles</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Tickers -->\\n\\t\\t\\t<div class=\\"kpi-card\\">\\n\\t\\t\\t\\t<div class=\\"kpi-icon\\">📊</div>\\n\\t\\t\\t\\t<div class=\\"kpi-content\\">\\n\\t\\t\\t\\t\\t<p class=\\"kpi-label\\">Tickers</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-value\\">{coverage?.news?.tickers_mentioned || 0}</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-subtitle\\">mentioned in news</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Topics -->\\n\\t\\t\\t<div class=\\"kpi-card\\">\\n\\t\\t\\t\\t<div class=\\"kpi-icon\\">🏷️</div>\\n\\t\\t\\t\\t<div class=\\"kpi-content\\">\\n\\t\\t\\t\\t\\t<p class=\\"kpi-label\\">Topics</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-value\\">{topicsSummary?.total_unique_topics || 0}</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-subtitle\\">configured for tracking</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Date Range -->\\n\\t\\t\\t<div class=\\"kpi-card\\">\\n\\t\\t\\t\\t<div class=\\"kpi-icon\\">📅</div>\\n\\t\\t\\t\\t<div class=\\"kpi-content\\">\\n\\t\\t\\t\\t\\t<p class=\\"kpi-label\\">Coverage Period</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-value\\">{coverage?.news?.date_range?.from || 'N/A'}</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-subtitle\\">to {coverage?.news?.date_range?.to || 'N/A'}</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t\\t<!-- Sources -->\\n\\t\\t\\t<div class=\\"kpi-card\\">\\n\\t\\t\\t\\t<div class=\\"kpi-icon\\">🔗</div>\\n\\t\\t\\t\\t<div class=\\"kpi-content\\">\\n\\t\\t\\t\\t\\t<p class=\\"kpi-label\\">Sources</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-value\\">{Object.keys(coverage?.news?.sources || {}).length}</p>\\n\\t\\t\\t\\t\\t<p class=\\"kpi-subtitle\\">active feeds</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</section>\\n\\n\\t<!-- System Status Card - NEW -->\\n\\t<section class=\\"system-status-section\\">\\n\\t\\t<div class=\\"status-grid\\">\\n\\t\\t\\t{#if healthLoading}\\n\\t\\t\\t\\t<div class=\\"skeleton-card\\" />\\n\\t\\t\\t{:else if healthStatus}\\n\\t\\t\\t\\t<div class=\\"status-card\\" class:status-healthy={healthStatus.status === 'healthy'} class:status-degraded={healthStatus.status === 'degraded'} class:status-stale={healthStatus.status === 'stale'}>\\n\\t\\t\\t\\t\\t<div class=\\"status-header\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\"status-badge\\" class:badge-healthy={healthStatus.status === 'healthy'} class:badge-degraded={healthStatus.status === 'degraded'} class:badge-stale={healthStatus.status === 'stale'}>\\n\\t\\t\\t\\t\\t\\t\\t{healthStatus.status === 'healthy' ? '🟢' : healthStatus.status === 'stale' ? '🟡' : '🔴'} {healthStatus.status.toUpperCase()}\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\"status-content\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\"status-item\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"status-label\\">Last Ingestion</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"status-value\\">{healthStatus.staleness_hours ? healthStatus.staleness_hours + 'h ago' : 'just now'}</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"status-item\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"status-label\\">24h Crawl Rate</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"status-value\\">{healthStatus.crawl_success_rate}%</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"status-item\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"status-label\\">Today's Articles</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"status-value\\">{healthStatus.articles_today}</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t\\t\\n\\t\\t\\t{#if metricsLoading}\\n\\t\\t\\t\\t<div class=\\"skeleton-card\\" />\\n\\t\\t\\t{:else if metricsData}\\n\\t\\t\\t\\t<div class=\\"quality-card\\">\\n\\t\\t\\t\\t\\t<h3>Data Quality Scorecard</h3>\\n\\t\\t\\t\\t\\t<div class=\\"quality-grid\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\"quality-item\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"quality-label\\">Body Coverage</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"quality-value\\">{Math.round((metricsData.total_articles / (metricsData.total_articles + metricsData.duplicate_count || 1)) * 100)}%</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"quality-item\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"quality-label\\">Duplicates</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"quality-value\\">{metricsData.duplicate_count || 0}</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"quality-item\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"quality-label\\">Languages</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"quality-value\\">{Object.keys(metricsData.languages || {}).length}</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"quality-item\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"quality-label\\">Avg Size</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\"quality-value\\">{metricsData.body_text?.avg_length ? Math.round(metricsData.body_text.avg_length / 1024) + 'KB' : 'N/A'}</span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t</section>\\n\\n\\t<!-- Top Topics -->\\n\\t<section class=\\"section-card\\">\\n\\t\\t<h2>📋 Trending Topics (Last 30 Days)</h2>\\n\\t\\t{#if topicsLoading}\\n\\t\\t\\t<div class=\\"topics-skeleton\\">\\n\\t\\t\\t\\t<div class=\\"skeleton-item\\" />\\n\\t\\t\\t\\t<div class=\\"skeleton-item\\" />\\n\\t\\t\\t\\t<div class=\\"skeleton-item\\" />\\n\\t\\t\\t</div>\\n\\t\\t{:else if topicsSummary?.topics && topicsSummary.topics.length > 0}\\n\\t\\t\\t<div class=\\"topics-list\\">\\n\\t\\t\\t\\t{#each topicsSummary.topics.slice(0, 5) as topic}\\n\\t\\t\\t\\t\\t<div class=\\"topic-item\\">\\n\\t\\t\\t\\t\\t\\t<span class=\\"topic-name\\">{topic.name}</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\"topic-count\\">{formatCount(topic.count)}</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t\\t<a href=\\"/satbase/topics\\" class=\\"link-button\\">View all topics →</a>\\n\\t\\t{:else}\\n\\t\\t\\t<p class=\\"no-data\\">No topics found in the last 30 days</p>\\n\\t\\t{/if}\\n\\t</section>\\n\\n\\t<!-- Topic Heatmap -->\\n\\t<section class=\\"section-card\\">\\n\\t\\t<div class=\\"heatmap-header-section\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<h2>🔥 Topic Heatmap</h2>\\n\\t\\t\\t\\t<p class=\\"heatmap-subtitle\\">Coverage by month and topic</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"year-selector\\">\\n\\t\\t\\t\\t<button on:click={() => (selectedYear -= 1)} title=\\"Previous year\\">←</button>\\n\\t\\t\\t\\t<span class=\\"year-display\\">{selectedYear}</span>\\n\\t\\t\\t\\t<button on:click={() => (selectedYear += 1)} title=\\"Next year\\">→</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t{#if heatmapLoading}\\n\\t\\t\\t<div class=\\"heatmap-skeleton\\">\\n\\t\\t\\t\\t<div class=\\"skeleton-bar\\" />\\n\\t\\t\\t\\t<div class=\\"skeleton-bar\\" />\\n\\t\\t\\t\\t<div class=\\"skeleton-bar\\" />\\n\\t\\t\\t</div>\\n\\t\\t{:else if heatmapData && Object.keys(heatmapData).length > 0}\\n\\t\\t\\t<div class=\\"heatmap-wrapper\\">\\n\\t\\t\\t\\t<table class=\\"heatmap-table\\">\\n\\t\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t\\t<tr class=\\"header-row\\">\\n\\t\\t\\t\\t\\t\\t\\t<th class=\\"topic-header\\">Topic</th>\\n\\t\\t\\t\\t\\t\\t\\t{#each ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'] as month}\\n\\t\\t\\t\\t\\t\\t\\t\\t<th class=\\"month-header\\">{month}</th>\\n\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t{#each Object.entries(heatmapData) as [topic, monthData]}\\n\\t\\t\\t\\t\\t\\t\\t<tr class=\\"data-row\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\"topic-cell\\">{topic}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t{#each Array(12) as _, monthIdx}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"heatmap-cell\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tstyle=\\"--intensity: {Math.min((monthData[monthIdx] || 0) / 50, 1)}\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttitle=\\"{monthData[monthIdx] || 0} articles\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"cell-value\\">{monthData[monthIdx] > 0 ? monthData[monthIdx] : ''}</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t</table>\\n\\t\\t\\t</div>\\n\\t\\t{:else}\\n\\t\\t\\t<p class=\\"no-data\\">No heatmap data available</p>\\n\\t\\t{/if}\\n\\t</section>\\n\\n\\t<!-- Data Health -->\\n\\t<section class=\\"section-card\\">\\n\\t\\t<h2>🏥 Data Health</h2>\\n\\t\\t<div class=\\"health-grid\\">\\n\\t\\t\\t<div class=\\"health-item\\">\\n\\t\\t\\t\\t<span class=\\"health-label\\">Content Quality</span>\\n\\t\\t\\t\\t<div class=\\"health-bar\\">\\n\\t\\t\\t\\t\\t<div class=\\"health-fill\\" style=\\"width: {qualityPercentage}%\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<span class=\\"health-value\\">{qualityPercentage}%</span>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</section>\\n{/if}\\n\\n<style>\\n\\t.page-header {\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\n\\t.page-header h1 {\\n\\t\\tfont-size: 2rem;\\n\\t\\tfont-weight: 700;\\n\\t\\tcolor: var(--color-text);\\n\\t\\tmargin-bottom: 0.5rem;\\n\\t}\\n\\n\\t.page-header p {\\n\\t\\tcolor: var(--color-text-secondary);\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\n\\t.flex {\\n\\t\\tdisplay: flex;\\n\\t}\\n\\n\\t.items-center {\\n\\t\\talign-items: center;\\n\\t}\\n\\n\\t.justify-between {\\n\\t\\tjustify-content: space-between;\\n\\t}\\n\\n\\t.refresh-controls {\\n\\t\\tdisplay: flex;\\n\\t\\tgap: 1rem;\\n\\t\\talign-items: center;\\n\\t}\\n\\n\\t.refresh-button {\\n\\t\\tpadding: 0.5rem 1rem;\\n\\t\\tbackground: linear-gradient(135deg, var(--color-accent), var(--color-primary));\\n\\t\\tborder: none;\\n\\t\\tborder-radius: var(--radius-md);\\n\\t\\tcolor: white;\\n\\t\\tfont-weight: 500;\\n\\t\\tcursor: pointer;\\n\\t\\ttransition: all var(--duration-200) var(--easing);\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\n\\t.refresh-button:hover {\\n\\t\\tbox-shadow: 0 0 12px rgba(34, 197, 211, 0.3);\\n\\t\\ttransform: translateY(-1px);\\n\\t}\\n\\n\\t.cache-status {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.25rem;\\n\\t\\tfont-size: 0.75rem;\\n\\t}\\n\\n\\t.status-text {\\n\\t\\tcolor: var(--color-text-secondary);\\n\\t}\\n\\n\\t.cache-age {\\n\\t\\tcolor: var(--color-accent);\\n\\t\\tfont-weight: 500;\\n\\t}\\n\\n\\t.error-box {\\n\\t\\tpadding: 1.5rem;\\n\\t\\tbackground: rgba(239, 68, 68, 0.1);\\n\\t\\tborder: 1px solid var(--color-error);\\n\\t\\tborder-radius: var(--radius-lg);\\n\\t\\tcolor: var(--color-error);\\n\\t\\ttext-align: center;\\n\\t}\\n\\n\\t.skeleton-grid {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n\\t\\tgap: 1.5rem;\\n\\t}\\n\\n\\t.skeleton-card {\\n\\t\\theight: 150px;\\n\\t\\tbackground: linear-gradient(90deg, var(--color-bg-card), var(--color-border));\\n\\t\\tborder-radius: var(--radius-lg);\\n\\t\\tanimation: pulse 2s var(--easing) infinite;\\n\\t}\\n\\n\\t.topics-skeleton {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.75rem;\\n\\t}\\n\\n\\t.skeleton-item {\\n\\t\\theight: 40px;\\n\\t\\tbackground: linear-gradient(90deg, var(--color-bg-card), var(--color-border));\\n\\t\\tborder-radius: var(--radius-md);\\n\\t\\tanimation: pulse 2s var(--easing) infinite;\\n\\t}\\n\\n\\t@keyframes pulse {\\n\\t\\t0%, 100% { opacity: 0.5; }\\n\\t\\t50% { opacity: 1; }\\n\\t}\\n\\n\\t.kpi-section,\\n\\t.section-card {\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\n\\th2 {\\n\\t\\tfont-size: 1.25rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: var(--color-text);\\n\\t\\tmargin-bottom: 1rem;\\n\\t}\\n\\n\\t.kpi-grid {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\\n\\t\\tgap: 1.5rem;\\n\\t}\\n\\n\\t.kpi-card {\\n\\t\\tdisplay: flex;\\n\\t\\tgap: 1rem;\\n\\t\\tpadding: 1.5rem;\\n\\t\\tbackground: var(--color-bg-card);\\n\\t\\tborder: 1px solid rgba(71, 85, 105, 0.3);\\n\\t\\tborder-radius: var(--radius-lg);\\n\\t\\ttransition: all var(--duration-300) var(--easing);\\n\\t\\tbackdrop-filter: blur(10px);\\n\\t}\\n\\n\\t.kpi-card:hover {\\n\\t\\tborder-color: rgba(34, 197, 211, 0.5);\\n\\t\\tbackground: rgba(51, 65, 85, 0.7);\\n\\t\\tbox-shadow: 0 0 20px rgba(34, 197, 211, 0.1);\\n\\t}\\n\\n\\t.kpi-icon {\\n\\t\\tfont-size: 2rem;\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t\\tflex-shrink: 0;\\n\\t}\\n\\n\\t.kpi-content {\\n\\t\\tflex: 1;\\n\\t}\\n\\n\\t.kpi-label {\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tcolor: var(--color-text-tertiary);\\n\\t\\ttext-transform: uppercase;\\n\\t\\tletter-spacing: 0.05em;\\n\\t\\tmargin-bottom: 0.5rem;\\n\\t}\\n\\n\\t.kpi-value {\\n\\t\\tfont-size: 1.875rem;\\n\\t\\tfont-weight: 700;\\n\\t\\tbackground: linear-gradient(135deg, var(--color-accent), var(--color-primary));\\n\\t\\t-webkit-background-clip: text;\\n\\t\\t-webkit-text-fill-color: transparent;\\n\\t\\tbackground-clip: text;\\n\\t\\tmargin: 0;\\n\\t}\\n\\n\\t.kpi-subtitle {\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tcolor: var(--color-text-tertiary);\\n\\t\\tmargin: 0.25rem 0 0 0;\\n\\t}\\n\\n\\t.section-card {\\n\\t\\tpadding: 2rem;\\n\\t\\tbackground: var(--color-bg-card);\\n\\t\\tborder: 1px solid rgba(71, 85, 105, 0.3);\\n\\t\\tborder-radius: var(--radius-lg);\\n\\t\\tbackdrop-filter: blur(10px);\\n\\t}\\n\\n\\t.topics-list {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.75rem;\\n\\t\\tmargin-bottom: 1rem;\\n\\t}\\n\\n\\t.topic-item {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: space-between;\\n\\t\\tpadding: 0.75rem;\\n\\t\\tbackground: rgba(16, 185, 129, 0.05);\\n\\t\\tborder-radius: var(--radius-md);\\n\\t\\tborder-left: 3px solid var(--color-primary);\\n\\t}\\n\\n\\t.topic-name {\\n\\t\\tcolor: var(--color-text);\\n\\t\\tfont-weight: 500;\\n\\t}\\n\\n\\t.topic-count {\\n\\t\\tcolor: var(--color-accent);\\n\\t\\tfont-weight: 600;\\n\\t}\\n\\n\\t.no-data {\\n\\t\\tcolor: var(--color-text-secondary);\\n\\t\\tfont-size: 0.875rem;\\n\\t\\ttext-align: center;\\n\\t\\tpadding: 2rem;\\n\\t}\\n\\n\\t.link-button {\\n\\t\\tdisplay: inline-block;\\n\\t\\tcolor: var(--color-accent);\\n\\t\\ttext-decoration: none;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tfont-weight: 500;\\n\\t\\ttransition: color var(--duration-200) var(--easing);\\n\\t}\\n\\n\\t.link-button:hover {\\n\\t\\tcolor: var(--color-primary);\\n\\t}\\n\\n\\t.health-grid {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 1.5rem;\\n\\t}\\n\\n\\t.health-item {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.75rem;\\n\\t}\\n\\n\\t.health-label {\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: var(--color-text-secondary);\\n\\t\\tfont-weight: 500;\\n\\t}\\n\\n\\t.health-bar {\\n\\t\\twidth: 100%;\\n\\t\\theight: 8px;\\n\\t\\tbackground: rgba(71, 85, 105, 0.3);\\n\\t\\tborder-radius: var(--radius-xl);\\n\\t\\toverflow: hidden;\\n\\t}\\n\\n\\t.health-fill {\\n\\t\\theight: 100%;\\n\\t\\tbackground: linear-gradient(90deg, var(--color-accent), var(--color-primary));\\n\\t\\ttransition: width var(--duration-500) var(--easing);\\n\\t}\\n\\n\\t.health-value {\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: var(--color-accent);\\n\\t}\\n\\n\\t@media (max-width: 768px) {\\n\\t\\t.page-header h1 {\\n\\t\\t\\tfont-size: 1.5rem;\\n\\t\\t}\\n\\n\\t\\t.kpi-grid {\\n\\t\\t\\tgrid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n\\t\\t\\tgap: 1rem;\\n\\t\\t}\\n\\n\\t\\t.section-card {\\n\\t\\t\\tpadding: 1.5rem;\\n\\t\\t}\\n\\n\\t\\t.refresh-controls {\\n\\t\\t\\tflex-direction: column;\\n\\t\\t\\tgap: 0.5rem;\\n\\t\\t\\talign-items: flex-end;\\n\\t\\t}\\n\\t}\\n\\n\\t/* Heatmap Styles */\\n\\t.year-selector {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 1rem;\\n\\t\\tbackground: var(--color-bg-card);\\n\\t\\tpadding: 0.5rem 1rem;\\n\\t\\tborder-radius: var(--radius-md);\\n\\t\\tborder: 1px solid rgba(71, 85, 105, 0.3);\\n\\t}\\n\\n\\t.year-selector button {\\n\\t\\tbackground: transparent;\\n\\t\\tborder: none;\\n\\t\\tcolor: var(--color-text-secondary);\\n\\t\\tcursor: pointer;\\n\\t\\tfont-size: 1.1rem;\\n\\t\\ttransition: color 200ms ease;\\n\\t}\\n\\n\\t.year-selector button:hover {\\n\\t\\tcolor: var(--color-accent);\\n\\t}\\n\\n\\t.year-display {\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: var(--color-text);\\n\\t\\tmin-width: 60px;\\n\\t\\ttext-align: center;\\n\\t}\\n\\n\\t.heatmap-skeleton {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.5rem;\\n\\t}\\n\\n\\t.skeleton-bar {\\n\\t\\theight: 30px;\\n\\t\\tbackground: linear-gradient(90deg, var(--color-bg-card), var(--color-border));\\n\\t\\tborder-radius: var(--radius-md);\\n\\t\\tanimation: pulse 2s var(--easing) infinite;\\n\\t}\\n\\n\\t.heatmap-wrapper {\\n\\t\\toverflow-x: auto;\\n\\t\\tborder: 1px solid rgba(71, 85, 105, 0.2);\\n\\t\\tborder-radius: var(--radius-md);\\n\\t\\tpadding: 1rem;\\n\\t\\tbackground: var(--color-bg-card);\\n\\t}\\n\\n\\t.heatmap-table {\\n\\t\\twidth: 100%;\\n\\t\\tborder-collapse: collapse;\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\n\\t.heatmap-table thead {\\n\\t\\tbackground: rgba(71, 85, 105, 0.3);\\n\\t\\tborder-bottom: 2px solid rgba(71, 85, 105, 0.4);\\n\\t}\\n\\n\\t.header-row th {\\n\\t\\tpadding: 0.75rem 0.5rem;\\n\\t\\ttext-align: center;\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: var(--color-text-secondary);\\n\\t\\tborder-right: 1px solid rgba(71, 85, 105, 0.2);\\n\\t}\\n\\n\\t.topic-header {\\n\\t\\ttext-align: left;\\n\\t\\twidth: 100px;\\n\\t}\\n\\n\\t.month-header {\\n\\t\\twidth: 50px;\\n\\t\\tfont-size: 0.75rem;\\n\\t}\\n\\n\\t.data-row {\\n\\t\\tborder-bottom: 1px solid rgba(71, 85, 105, 0.1);\\n\\t\\ttransition: background-color 150ms ease;\\n\\t}\\n\\n\\t.data-row:hover {\\n\\t\\tbackground: rgba(71, 85, 105, 0.15);\\n\\t}\\n\\n\\t.topic-cell {\\n\\t\\tpadding: 0.75rem 1rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: var(--color-text);\\n\\t\\tborder-right: 1px solid rgba(71, 85, 105, 0.2);\\n\\t\\twidth: 100px;\\n\\t\\ttext-align: left;\\n\\t}\\n\\n\\t.heatmap-cell {\\n\\t\\tpadding: 0.5rem;\\n\\t\\ttext-align: center;\\n\\t\\tborder-right: 1px solid rgba(71, 85, 105, 0.1);\\n\\t\\tbackground: linear-gradient(\\n\\t\\t\\t135deg,\\n\\t\\t\\thsla(270, 100%, 70%, calc(var(--intensity) * 0.3)),\\n\\t\\t\\thsla(200, 100%, 60%, calc(var(--intensity) * 0.5))\\n\\t\\t);\\n\\t\\ttransition: all 150ms ease;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\n\\t.heatmap-cell:hover {\\n\\t\\ttransform: scale(1.05);\\n\\t\\tbox-shadow: inset 0 0 8px rgba(0, 0, 0, 0.3);\\n\\t}\\n\\n\\t.cell-value {\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: var(--color-text-secondary);\\n\\t\\tdisplay: block;\\n\\t}\\n\\n\\t/* New styles for System Status Card */\\n\\t.system-status-section {\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\n\\t.status-grid {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\\n\\t\\tgap: 1.5rem;\\n\\t}\\n\\n\\t.status-card {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 1rem;\\n\\t\\tpadding: 1.5rem;\\n\\t\\tbackground: var(--color-bg-card);\\n\\t\\tborder: 1px solid rgba(71, 85, 105, 0.3);\\n\\t\\tborder-radius: var(--radius-lg);\\n\\t\\tbackdrop-filter: blur(10px);\\n\\t\\ttransition: all var(--duration-300) var(--easing);\\n\\t}\\n\\n\\t.status-card:hover {\\n\\t\\tborder-color: rgba(34, 197, 211, 0.5);\\n\\t\\tbackground: rgba(51, 65, 85, 0.7);\\n\\t\\tbox-shadow: 0 0 20px rgba(34, 197, 211, 0.1);\\n\\t}\\n\\n\\t.status-header {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: space-between;\\n\\t\\talign-items: center;\\n\\t\\tpadding-bottom: 0.75rem;\\n\\t\\tborder-bottom: 1px solid rgba(71, 85, 105, 0.2);\\n\\t}\\n\\n\\t.status-badge {\\n\\t\\tfont-size: 1.25rem;\\n\\t\\tfont-weight: 700;\\n\\t\\tpadding: 0.5rem 1rem;\\n\\t\\tborder-radius: var(--radius-md);\\n\\t\\tcolor: white;\\n\\t\\tflex-shrink: 0;\\n\\t}\\n\\n\\t.badge-healthy {\\n\\t\\tbackground: linear-gradient(135deg, var(--color-success), var(--color-primary));\\n\\t}\\n\\n\\t.badge-degraded {\\n\\t\\tbackground: linear-gradient(135deg, var(--color-warning), var(--color-primary));\\n\\t}\\n\\n\\t.badge-stale {\\n\\t\\tbackground: linear-gradient(135deg, var(--color-info), var(--color-primary));\\n\\t}\\n\\n\\t.status-content {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.75rem;\\n\\t}\\n\\n\\t.status-item {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: space-between;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: var(--color-text-secondary);\\n\\t}\\n\\n\\t.status-label {\\n\\t\\tfont-weight: 500;\\n\\t}\\n\\n\\t.status-value {\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: var(--color-accent);\\n\\t}\\n\\n\\t.quality-card {\\n\\t\\tpadding: 1.5rem;\\n\\t\\tbackground: var(--color-bg-card);\\n\\t\\tborder: 1px solid rgba(71, 85, 105, 0.3);\\n\\t\\tborder-radius: var(--radius-lg);\\n\\t\\tbackdrop-filter: blur(10px);\\n\\t}\\n\\n\\t.quality-card h3 {\\n\\t\\tfont-size: 1rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: var(--color-text);\\n\\t\\tmargin-bottom: 1rem;\\n\\t\\tborder-bottom: 1px solid rgba(71, 85, 105, 0.2);\\n\\t\\tpadding-bottom: 0.75rem;\\n\\t}\\n\\n\\t.quality-grid {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\\n\\t\\tgap: 1rem;\\n\\t}\\n\\n\\t.quality-item {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.5rem;\\n\\t}\\n\\n\\t.quality-label {\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tcolor: var(--color-text-tertiary);\\n\\t\\ttext-transform: uppercase;\\n\\t\\tletter-spacing: 0.05em;\\n\\t}\\n\\n\\t.quality-value {\\n\\t\\tfont-size: 1.25rem;\\n\\t\\tfont-weight: 700;\\n\\t\\tbackground: linear-gradient(135deg, var(--color-accent), var(--color-primary));\\n\\t\\t-webkit-background-clip: text;\\n\\t\\t-webkit-text-fill-color: transparent;\\n\\t\\tbackground-clip: text;\\n\\t}\\n</style>\\n"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let formattedTime;
  let lastUpdated = /* @__PURE__ */ new Date();
  $$result.css.add(css);
  formattedTime = lastUpdated.toLocaleTimeString();
  return `<div class="page-header svelte-rhfmur"><div class="flex items-center justify-between svelte-rhfmur"><div data-svelte-h="svelte-1x3e4p8"><h1 class="svelte-rhfmur">📊 Overview</h1> <p class="svelte-rhfmur">Satbase data health and coverage at a glance</p></div> <div class="refresh-controls svelte-rhfmur"><button class="refresh-button svelte-rhfmur" title="Force refresh (bypasses cache)" data-svelte-h="svelte-hmp6s7">🔄 Refresh</button> <div class="cache-status svelte-rhfmur"><span class="status-text svelte-rhfmur">Updated ${escape(formattedTime)}</span> ${``}</div></div></div></div> ${`<div class="skeleton-grid svelte-rhfmur">${each(Array(6), (_) => {
    return `<div class="skeleton-card svelte-rhfmur"></div>`;
  })}</div>`}`;
});
export {
  Page as default
};
